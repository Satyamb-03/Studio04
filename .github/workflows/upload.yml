name: Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the Code
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Step 2: Cache Node.js Modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 3: Install Dependencies
    - name: Install Dependencies
      run: npm install

    # Step 4: Run Unit Tests
    - name: Run Unit Tests
      run: npm test

    # Step 5: Run Linter
    - name: Run Linter
      run: npm run lint

    # Step 6: Deploy to UpCloud Server
    - name: Deploy to UpCloud Server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.UPCLOUD_SERVER_IP }} # Add your server IP in GitHub Secrets
        username: ${{ secrets.UPCLOUD_SERVER_USERNAME }} # Add your SSH username in GitHub Secrets
        password: ${{ secrets.UPCLOUD_SERVER_PASSWORD }} # Add your SSH password in GitHub Secrets
        script: |
          set -e
          echo "Checking if Docker is installed on the server..."
          if ! [ -x "$(command -v docker)" ]; then
            echo "Docker is not installed. Installing Docker..."
            sudo apt update && sudo apt install -y docker.io
          fi
          echo "Docker is installed and ready."

          echo "Navigating to Studio04 directory..."
          if [ ! -d "Studio04" ]; then
            echo "Directory not found. Cloning repository..."
            git clone https://github.com/Satyamb-03/Studio04.git
          fi
          cd Studio04

          echo "Pulling the latest changes from the repository..."
          git reset --hard
          git clean -fd
          git pull origin main

          echo "Stopping any running containers..."
          docker-compose down

          echo "Building and starting containers..."
          docker-compose up --build -d

          echo "Deployment completed successfully."

    # Step 7: Verify Deployment
    - name: Verify Deployment
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.UPCLOUD_SERVER_IP }}
        username: ${{ secrets.UPCLOUD_SERVER_USERNAME }}
        password: ${{ secrets.UPCLOUD_SERVER_PASSWORD }}
        script: |
          echo "Verifying running containers..."
          docker ps

          echo "Checking application health..."
          curl -I http://localhost:8080 || { echo "Application is not responding."; exit 1; }

    # Step 8: Notify on Failure
    - name: Notify on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        botToken: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        slack-message: |
          Deployment failed for Node.js App.
          Check the logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
